// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using deneme.Data;

#nullable disable

namespace deneme.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250721081824_InitialPostgreSQLMigration")]
    partial class InitialPostgreSQLMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("deneme.Models.AcikPort", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("GuvenlikDuvariBilgileriId")
                        .HasColumnType("integer");

                    b.Property<string>("PortNumarasi")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Protokol")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.HasIndex("GuvenlikDuvariBilgileriId");

                    b.ToTable("AcikPortlar");
                });

            modelBuilder.Entity("deneme.Models.AgDepolamaBilgileri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("DiskBoyutu")
                        .HasColumnType("integer");

                    b.Property<int?>("DiskSayisi")
                        .HasColumnType("integer");

                    b.Property<int>("MusteriId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RaidTipi")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("SonGuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("YedeklemeDosyaYolu")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int?>("YedeklemeDurumu")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId")
                        .IsUnique();

                    b.ToTable("AgDepolamaBilgileri");
                });

            modelBuilder.Entity("deneme.Models.ErpBilgileri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ErpUrunAdi")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int?>("KullaniciSayisi")
                        .HasColumnType("integer");

                    b.Property<int?>("KullanimSekli")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("KurulumTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LemTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("LisansTuru")
                        .HasColumnType("integer");

                    b.Property<int>("MusteriId")
                        .HasColumnType("integer");

                    b.Property<string>("Notlar")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("SonGuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SurumBilgisi")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("YedeklemeDurumu")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId");

                    b.ToTable("ErpBilgileri");
                });

            modelBuilder.Entity("deneme.Models.ErpServerIpAdresi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("ErpBilgileriId")
                        .HasColumnType("integer");

                    b.Property<string>("IpAdresi")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)");

                    b.HasKey("Id");

                    b.HasIndex("ErpBilgileriId");

                    b.ToTable("ErpServerIpAdresleri");
                });

            modelBuilder.Entity("deneme.Models.GuvenlikDuvariBilgileri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("GuvenlikDuvariVarMi")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LemTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Model")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("MusteriId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("SonGuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("YedeklemeDosyaYolu")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("YedeklemeDurumu")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId")
                        .IsUnique();

                    b.ToTable("GuvenlikDuvariBilgileri");
                });

            modelBuilder.Entity("deneme.Models.ModemAcikPort", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("ModemBilgileriId")
                        .HasColumnType("integer");

                    b.Property<string>("PortNumarasi")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Protokol")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.HasIndex("ModemBilgileriId");

                    b.ToTable("ModemAcikPortlar");
                });

            modelBuilder.Entity("deneme.Models.ModemBilgileri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Marka")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Model")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("MusteriId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("SonGuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("YedeklemeDosyaYolu")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("YedeklemeDurumu")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId")
                        .IsUnique();

                    b.ToTable("ModemBilgileri");
                });

            modelBuilder.Entity("deneme.Models.ModemIpAdresi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("IpAdresi")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<int>("ModemBilgileriId")
                        .HasColumnType("integer");

                    b.Property<string>("Tip")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.HasIndex("ModemBilgileriId");

                    b.ToTable("ModemIpAdresleri");
                });

            modelBuilder.Entity("deneme.Models.ModemKullaniciErisimBilgileri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("KullaniciAdi")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("ModemBilgileriId")
                        .HasColumnType("integer");

                    b.Property<string>("Sifre")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("ModemBilgileriId");

                    b.ToTable("ModemKullaniciErisimBilgileri");
                });

            modelBuilder.Entity("deneme.Models.Musteri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FirmaUnvani")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Notlar")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("SonGuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("TCKN")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("VergiNo")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.ToTable("Musteriler", t =>
                        {
                            t.HasCheckConstraint("CK_Musteri_TCKN_VergiNo", "\"TCKN\" IS NOT NULL OR \"VergiNo\" IS NOT NULL");
                        });
                });

            modelBuilder.Entity("deneme.Models.OzelParametre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("boolean");

                    b.Property<string>("DosyaYolu")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Icerik")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<byte[]>("LogoResim")
                        .HasColumnType("bytea");

                    b.Property<int>("MusteriId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ParametreAdi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("ParametreTuru")
                        .HasColumnType("integer");

                    b.Property<string>("Versiyon")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId");

                    b.ToTable("OzelParametreler");
                });

            modelBuilder.Entity("deneme.Models.OzelYazilimBilgileri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DestekVerenFirma")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("EntegrasyonAciklama")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("EntegrasyonDurumu")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("KiralamaModeli")
                        .HasColumnType("integer");

                    b.Property<int?>("KullaniciSayisi")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("KurulumTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LemTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("LisansTuru")
                        .HasColumnType("integer");

                    b.Property<int>("MusteriId")
                        .HasColumnType("integer");

                    b.Property<string>("Notlar")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("SonGuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SurumBilgisi")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("YazilimIsmi")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId");

                    b.ToTable("OzelYazilimBilgileri");
                });

            modelBuilder.Entity("deneme.Models.PasswordResetToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("boolean");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UsedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("PasswordResetTokens");
                });

            modelBuilder.Entity("deneme.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("deneme.Models.WebmailBilgileri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("AktifWebSitesiVarMi")
                        .HasColumnType("boolean");

                    b.Property<string>("DomainHizmetiSaglayicisi")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HostingHizmetiSaglayicisi")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("MailHizmetiAlinanFirma")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int?>("MailKullaniciSayisi")
                        .HasColumnType("integer");

                    b.Property<int>("MusteriId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PortalKullaniciAdi")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("PortalSifre")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool>("SiteOmegaYazilimTarafindanMiYapildi")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("MusteriId")
                        .IsUnique();

                    b.ToTable("WebmailBilgileri");
                });

            modelBuilder.Entity("deneme.Models.AcikPort", b =>
                {
                    b.HasOne("deneme.Models.GuvenlikDuvariBilgileri", "GuvenlikDuvariBilgileri")
                        .WithMany("AcikPortlar")
                        .HasForeignKey("GuvenlikDuvariBilgileriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GuvenlikDuvariBilgileri");
                });

            modelBuilder.Entity("deneme.Models.AgDepolamaBilgileri", b =>
                {
                    b.HasOne("deneme.Models.Musteri", "Musteri")
                        .WithOne("AgDepolamaBilgileri")
                        .HasForeignKey("deneme.Models.AgDepolamaBilgileri", "MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("deneme.Models.ErpBilgileri", b =>
                {
                    b.HasOne("deneme.Models.Musteri", "Musteri")
                        .WithMany("ErpBilgileri")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("deneme.Models.ErpServerIpAdresi", b =>
                {
                    b.HasOne("deneme.Models.ErpBilgileri", "ErpBilgileri")
                        .WithMany("ServerIpAdresleri")
                        .HasForeignKey("ErpBilgileriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ErpBilgileri");
                });

            modelBuilder.Entity("deneme.Models.GuvenlikDuvariBilgileri", b =>
                {
                    b.HasOne("deneme.Models.Musteri", "Musteri")
                        .WithOne("GuvenlikDuvariBilgileri")
                        .HasForeignKey("deneme.Models.GuvenlikDuvariBilgileri", "MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("deneme.Models.ModemAcikPort", b =>
                {
                    b.HasOne("deneme.Models.ModemBilgileri", "ModemBilgileri")
                        .WithMany("AcikPortlar")
                        .HasForeignKey("ModemBilgileriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModemBilgileri");
                });

            modelBuilder.Entity("deneme.Models.ModemBilgileri", b =>
                {
                    b.HasOne("deneme.Models.Musteri", "Musteri")
                        .WithOne("ModemBilgileri")
                        .HasForeignKey("deneme.Models.ModemBilgileri", "MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("deneme.Models.ModemIpAdresi", b =>
                {
                    b.HasOne("deneme.Models.ModemBilgileri", "ModemBilgileri")
                        .WithMany("IpAdresleri")
                        .HasForeignKey("ModemBilgileriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModemBilgileri");
                });

            modelBuilder.Entity("deneme.Models.ModemKullaniciErisimBilgileri", b =>
                {
                    b.HasOne("deneme.Models.ModemBilgileri", "ModemBilgileri")
                        .WithMany("KullaniciErisimBilgileri")
                        .HasForeignKey("ModemBilgileriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModemBilgileri");
                });

            modelBuilder.Entity("deneme.Models.OzelParametre", b =>
                {
                    b.HasOne("deneme.Models.Musteri", "Musteri")
                        .WithMany("OzelParametreler")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("deneme.Models.OzelYazilimBilgileri", b =>
                {
                    b.HasOne("deneme.Models.Musteri", "Musteri")
                        .WithMany("OzelYazilimBilgileri")
                        .HasForeignKey("MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("deneme.Models.WebmailBilgileri", b =>
                {
                    b.HasOne("deneme.Models.Musteri", "Musteri")
                        .WithOne("WebmailBilgileri")
                        .HasForeignKey("deneme.Models.WebmailBilgileri", "MusteriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musteri");
                });

            modelBuilder.Entity("deneme.Models.ErpBilgileri", b =>
                {
                    b.Navigation("ServerIpAdresleri");
                });

            modelBuilder.Entity("deneme.Models.GuvenlikDuvariBilgileri", b =>
                {
                    b.Navigation("AcikPortlar");
                });

            modelBuilder.Entity("deneme.Models.ModemBilgileri", b =>
                {
                    b.Navigation("AcikPortlar");

                    b.Navigation("IpAdresleri");

                    b.Navigation("KullaniciErisimBilgileri");
                });

            modelBuilder.Entity("deneme.Models.Musteri", b =>
                {
                    b.Navigation("AgDepolamaBilgileri");

                    b.Navigation("ErpBilgileri");

                    b.Navigation("GuvenlikDuvariBilgileri");

                    b.Navigation("ModemBilgileri");

                    b.Navigation("OzelParametreler");

                    b.Navigation("OzelYazilimBilgileri");

                    b.Navigation("WebmailBilgileri");
                });
#pragma warning restore 612, 618
        }
    }
}
